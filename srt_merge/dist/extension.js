"use strict";var P=Object.create;var m=Object.defineProperty;var y=Object.getOwnPropertyDescriptor;var A=Object.getOwnPropertyNames;var $=Object.getPrototypeOf,R=Object.prototype.hasOwnProperty;var C=(t,n)=>{for(var e in n)m(t,e,{get:n[e],enumerable:!0})},f=(t,n,e,c)=>{if(n&&typeof n=="object"||typeof n=="function")for(let s of A(n))!R.call(t,s)&&s!==e&&m(t,s,{get:()=>n[s],enumerable:!(c=y(n,s))||c.enumerable});return t};var M=(t,n,e)=>(e=t!=null?P($(t)):{},f(n||!t||!t.__esModule?m(e,"default",{value:t,enumerable:!0}):e,t)),I=t=>f(m({},"__esModule",{value:!0}),t);var V={};C(V,{activate:()=>W,deactivate:()=>z});module.exports=I(V);var o=M(require("vscode"));function W(t){console.log('Congratulations, your extension "srt-merge" is now active!');let n=o.commands.registerCommand("srt-merge.helloWorld",()=>{o.window.showInformationMessage("Hello World from Script Shortcut Extension!")}),e=o.commands.registerCommand("srt-merge.mergeSegments",async()=>{let c=o.window.activeTextEditor;if(!c){o.window.showErrorMessage("No active text editor found");return}let s=c.selection.active.line;try{await o.window.withProgress({location:o.ProgressLocation.Notification,title:`Processing line ${s+1}...`,cancellable:!1},async()=>{await N(c,s)})}catch(r){o.window.showErrorMessage(`Script execution failed: ${r instanceof Error?r.message:String(r)}`)}});t.subscriptions.push(n,e)}async function N(t,n){let e=t.document,c=e.lineAt(n),s=n,r=0;for(;s>0;){if(e.lineAt(s).isEmptyOrWhitespace){r=s+1;break}s-=1}console.log(`Current cursor position: ${n+1}`),console.log(`Start line found: ${r+1}`);let l="",d=w(e,r);if(d===-1){let i="SRT format not recognized for first segment starting at line "+(r+1)+".";console.log(i),o.window.showErrorMessage(i);return}console.log("SRT format validation passed");let p=e.lineAt(r+1).text.trim().substring(0,12);for(let i=r+2;i<d;i++){let a=e.lineAt(i);a.isEmptyOrWhitespace||(l+=a.text+" ")}let g=d,u=w(e,g);if(u===-1){let i="SRT format not recognized for the second segment starting at line "+(g+1)+".";console.log(i),o.window.showErrorMessage(i);return}console.log("SRT format validation for second segment passed");let v=e.lineAt(g+1).text.trim().substring(12,29);for(let i=d+2;i<u;i++){let a=e.lineAt(i);a.isEmptyOrWhitespace||(l+=a.text+" ")}let x=e.lineAt(r).text.trim(),b=p+v,h=[x,b,l.trim()],S=new o.Position(r,0),T=new o.Position(u,0),E=new o.Range(S,T),L=h.join(`
`)+`
`;await t.edit(i=>{i.replace(E,L)}),console.log("Successfully merged SRT segments"),o.window.showInformationMessage("SRT segments merged successfully")}function w(t,n){let e=n,c=-1;for(;e<=t.lineCount-3;){let s=t.lineAt(e);if(!O(s.text.trim()))return console.log(`Invalid subtitle number at line ${e+1}: "${s.text}"`),-1;e++;let r=t.lineAt(e);if(!j(r.text.trim()))return console.log(`Invalid timestamp at line ${e+1}: "${r.text}"`),-1;for(e++;e<t.lineCount;){if(t.lineAt(e).isEmptyOrWhitespace)return e++,c=e,c;e++}}return c}function O(t){return/^\d+$/.test(t)&&parseInt(t)>0}function j(t){return/^\d{2}:\d{2}:\d{2},\d{3}\s*-->\s*\d{2}:\d{2}:\d{2},\d{3}$/.test(t)}function z(){}0&&(module.exports={activate,deactivate});
